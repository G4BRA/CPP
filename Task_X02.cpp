#include <iostream>
#include <math.h>
using namespace std;
/*
Итак, задача следующая, написать функцию, которая возвращает корни квадратного уравнения

Разделим на шаги:

1. Определим само уравнение.
1.1. a,b,c - у нас будут принимать значения, написанные пользователем.
1.2. x - будет находиться, для этого у нас есть Дискриминант. (возможно, стоит реализовать т.Виета?)
2. Надо возвращать и корни или сообщать об их отсутствии в пространстве рац.чисел.
Рац.числа - это любые числа, которые не относяться к мнимой части. (то есть, Дискриминант >= 0)
Для реализации этой функции, я, пожалуй, сразу вспомню, что D>0; D=0; то есть, уже нужны две конструкции if...else
Начнем с объявления переменных.
*/

void solve_square_equation(float a, float b, float c) {
    float D = b * b - 4 * a * c;
    float x1, x2;
    //Первый if
    if (D > 0) {
        x1 = (-b + sqrt(D)) / (2 * a);
        x2 = (-b - sqrt(D)) / (2 * a);
        cout << "x1 = " << x1 << ", x2 = " << x2 << endl;
    }
    //Здесь решил сделать через else...if. Конструкция иначе с условием
    else if (D == 0) {
        x1 = -b / (2 * a);
        cout << " x = " << x1 << endl;
    }
    // Ну и любимый наш else во всей своей красе
    else {
        cout << "figushki :)" << endl;
    }
}

int main() {
    float a,b,c;
    //Я не понял немного, почему кодировка сбивается, но не страшно
    cout << "Input a, b, c: ";
    cin >> a >> b >> c;
    solve_square_equation(a, b, c);
    return 0;
}
